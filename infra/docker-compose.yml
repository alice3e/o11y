version: '3.8'

services:
  # База данных Cassandra
  cassandra:
    image: cassandra:4.1
    container_name: infra-cassandra
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10
    networks:
      - product-store-net

  # Backend API сервис
  backend:
    build:
      context: ..
      dockerfile: app/backend/Dockerfile
    container_name: infra-backend
    depends_on:
      cassandra:
        condition: service_healthy
    environment:
      - CASSANDRA_HOST=cassandra
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/system/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - product-store-net

  # Сервис корзины
  cart-service:
    build:
      context: ..
      dockerfile: app/cart-service/Dockerfile
    container_name: infra-cart-service
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - BACKEND_URL=http://backend:8000
      - ORDER_SERVICE_URL=http://order-service:8002
      - SECRET_KEY=supersecretkey123
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - product-store-net

  # Сервис заказов
  order-service:
    build:
      context: ..
      dockerfile: app/order-service/Dockerfile
    container_name: infra-order-service
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - BACKEND_URL=http://backend:8000
      - USER_SERVICE_URL=http://user-service:8003
      - SECRET_KEY=supersecretkey123
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - product-store-net

  # Сервис пользователей
  user-service:
    build:
      context: ..
      dockerfile: app/user-service/Dockerfile
    container_name: infra-user-service
    depends_on:
      backend:
        condition: service_healthy
      cart-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
    environment:
      - CART_SERVICE_URL=http://cart-service:8001
      - ORDER_SERVICE_URL=http://order-service:8002
      - SECRET_KEY=supersecretkey123
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - product-store-net

  # Документация (mkdocs)
  docs:
    build:
      context: ..
      dockerfile: app/docs/Dockerfile
    container_name: infra-docs
    networks:
      - product-store-net

  # Swagger UI
  swagger-ui:
    build:
      context: ..
      dockerfile: app/swagger-ui/Dockerfile
    container_name: infra-swagger-ui
    depends_on:
      backend:
        condition: service_healthy
      cart-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/swagger.json"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - product-store-net

  # Nginx для маршрутизации запросов
  nginx:
    build:
      context: ..
      dockerfile: app/nginx/Dockerfile
    container_name: infra-nginx
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
      cart-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      swagger-ui:
        condition: service_healthy
      docs:
        condition: service_started
    networks:
      - product-store-net

volumes:
  cassandra_data:

networks:
  product-store-net:
    driver: bridge