---
- name: Deploy Product Store Microservices
  hosts: production_servers
  become: yes
  gather_facts: yes
  
  vars:
    app_version: "{{ lookup('env', 'APP_VERSION') or 'latest' }}"
    deployment_env: "{{ lookup('env', 'DEPLOY_ENV') or 'development' }}"
  
  pre_tasks:
    - name: Display deployment environment
      ansible.builtin.debug:
        msg: "Deploying in {{ deployment_env }} environment"
    
    - name: Validate deployment environment
      ansible.builtin.fail:
        msg: "Invalid DEPLOY_ENV: {{ deployment_env }}. Must be one of: development, staging, production"
      when: deployment_env not in ['development', 'staging', 'production']

  roles:
    - role: common
      tags: [system, common]
    
    - role: docker
      tags: [docker]
    
    - role: deploy_app
      tags: [deploy, app]
  
  post_tasks:
    - name: Display deployment summary
      ansible.builtin.debug:
        msg: |
          ðŸŽ‰ Deployment completed successfully!
          
          ðŸ“Š Access URLs:
          - Application: http://{{ ansible_default_ipv4.address }}
          - Prometheus: http://{{ ansible_default_ipv4.address }}:9090
          - Grafana: http://{{ ansible_default_ipv4.address }}:3000
          - Jaeger: http://{{ ansible_default_ipv4.address }}:16686
          
          ðŸ”§ Management:
          - SSH: ssh {{ ansible_user }}@{{ ansible_default_ipv4.address }}
          - Logs: docker-compose -f {{ app_directory }}/infra/docker-compose.yml logs
          - Health: {{ app_directory }}/scripts/health_check.sh